# -*- coding: utf-8 -*-
"""Free_kick.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1c04X6hnKX6vzxvCBsCmSR1Fvw8b1t8Eb
"""

!pip install roboflow
!pip install ultralytics

!pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="fCmtWxG0yM6xt4n7WtIR")
project = rf.workspace("eilaf").project("free_kick-azo4e")
version = project.version(3)
dataset = version.download("yolov8")

!ls /content
!ls /content/free_kick-3/

from ultralytics import YOLO

model = YOLO("yolov8n.pt")  # أو استخدم yolov8m.pt لو عندك موارد أكثر

model.train(data="/content/free_kick-3/data.yaml",
    epochs=50,
    imgsz=640,
    batch=8,
    patience=20,
    lr0=0.001,
    optimizer="Adam"
)

from google.colab import files
uploaded = files.upload()

from ultralytics import YOLO
import cv2
from google.colab.patches import cv2_imshow

model = YOLO("/content/runs/detect/train/weights/best.pt")
img_path = "/content/free_kick2.png"

results = model(img_path)[0]
annotated = results.plot()
cv2_imshow(annotated)

cv2.imwrite("/content/predicted_output.png", annotated)

#model testing
model = YOLO("runs/detect/train/weights/best.pt")
results = model.predict(source="free_kick2.png", save=True, conf=0.4)

from ultralytics import YOLO
import cv2
import numpy as np
from google.colab.patches import cv2_imshow

# تحميل النموذج المدرب
model = YOLO("/content/runs/detect/train/weights/best.pt")

# تحميل الصورة
image_path = "/content/free_kick2.png"
img = cv2.imread(image_path)

# التنبؤ
results = model(img, conf=0.1)[0]
boxes = results.boxes
names = model.names

ball_box = None
wall_box = None

for box in boxes:
    x1, y1, x2, y2 = map(int, box.xyxy[0])
    cls_id = int(box.cls[0])
    cls_name = names[cls_id]

    if cls_name == "ball":
        ball_box = (x1, y1, x2, y2)
        cv2.rectangle(img, (x1, y1), (x2, y2), (255, 0, 0), 2)
        cv2.putText(img, "Ball", (x1, y1 - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.6, (255, 0, 0), 2)

    elif cls_name == "wall":
        wall_box = (x1, y1, x2, y2)
        cv2.rectangle(img, (x1, y1), (x2, y2), (0, 255, 0), 2)
        cv2.putText(img, "Wall", (x1, y1 - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0, 255, 0), 2)

# حساب المسافة + رسم خط + تحويل إلى متر
if ball_box and wall_box:
    ball_center = ((ball_box[0] + ball_box[2]) // 2, (ball_box[1] + ball_box[3]) // 2)
    wall_edge = (wall_box[0], (wall_box[1] + wall_box[3]) // 2)

    # رسم الخط بين الكرة والحائط
    cv2.line(img, ball_center, wall_edge, (0, 0, 255), 2)

    # حساب المسافة بالبكسل
    distance_px = abs(ball_center[0] - wall_edge[0])

    # تحويل لبالمتر (تقريبي: 40px = 1m)
    distance_m = distance_px / 40

    # عرض النتائج
    text = f"Distance: {distance_px}px ≈ {distance_m:.2f}m"
    cv2.putText(img, text, (50, 50), cv2.FONT_HERSHEY_SIMPLEX, 0.8, (0, 0, 255), 2)

# عرض الصورة النهائية
cv2_imshow(img)

# حفظ الصورة
cv2.imwrite("/content/free_kick2_analysis.png", img)

print(model.names)

!ls /content
!ls /content/free_kick-3

!ls /content/runs/detect

results = model("/content/free_kick2.png")[0]
for c in results.boxes.cls:
    print(model.names[int(c)])

from ultralytics import YOLO
import cv2
import numpy as np
from google.colab.patches import cv2_imshow

# تحميل النموذج
model = YOLO("/content/runs/detect/train/weights/best.pt")  # غيّري المسار لو احتجتِ

# تحميل الصورة
image_path = "/content/free_kick2.png"  # غيّريها لاسم صورتك
img = cv2.imread(image_path)

# عمل التنبؤ
results = model(image_path)[0]

# استخراج البوكسات للكلاسين المطلوبين
ball_box = None
space_box = None
for box, cls in zip(results.boxes.xyxy, results.boxes.cls):
    label = model.names[int(cls)]
    if label == "ball":
        ball_box = box
    elif label == "space":
        space_box = box

# إذا وُجدوا نحسب ونرسم
if ball_box is not None and space_box is not None:
    # حساب المركز
    bx1, by1, bx2, by2 = ball_box
    sx1, sy1, sx2, sy2 = space_box

    ball_center = ((bx1 + bx2) / 2, (by1 + by2) / 2)
    space_center = ((sx1 + sx2) / 2, (sy1 + sy2) / 2)

    # حساب المسافة
    distance = int(np.linalg.norm(np.array(ball_center) - np.array(space_center)))

    # رسم الخط
    cv2.line(img, (int(ball_center[0]), int(ball_center[1])), (int(space_center[0]), int(space_center[1])), (255, 0, 0), 2)
    cv2.putText(img, f"Distance: {distance}px", (int(ball_center[0]), int(ball_center[1]) - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0,0,255), 2)

# عرض الصورة
cv2_imshow(img)